<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="koing.kosta180.mappers.TicketMapper">
	
	<select id="getStoreList" parameterType="String" resultType="StoreVO">
		select * from store where id = #{value}
	</select>


	<insert id="insertTicket" parameterType="TicketVO">
		insert into ticket(
		t_bno, t_contents, s_no, t_cost, t_discount, t_fixedprice,t_effectivelife
		)values(
		CONCAT('B',c_no_seq.nextval), #{t_contents}, 'A01', #{t_cost}, #{t_discount}, #{t_cost}-(#{t_cost})*(#{t_discount}/100),#{t_effectivelife}
		)
	</insert>
	
	<insert id = "issuedTicket"  parameterType="TicketVO">
		insert into issued_t(
		i_no, t_bno, i_valid, id
		)values(
		(select NVL(max(i_no),0)+1 from issued_t), (select t_bno from ticket), sysdate + (select t_effectivelife from ticket), #{id}
		)
	</insert>
	
	<insert id = "completeTicket"  parameterType="TicketVO">
		insert into complete_t(
		i_no, com_contents
		)values(
		(select i_no from issued_t), #{com_contents}
		)
	</insert>
	
	<select id="readTicket" parameterType="String" resultType="TicketVO">
		select * from ticket where t_bno = #{t_bno}
	</select>
	
	<update id="updateTicket">
		update ticket
		set t_contents = #{t_contents}, t_cost = #{t_cost}, t_discount = #{t_discount}, t_effectivelife = #{t_effectivelife}
		where t_bno = #{t_bno} and s_no = #{s_no}
	</update>
	
	<delete id="deleteTicket" parameterType="String">
		delete from ticket
		where t_bno = #{t_bno}
	</delete>
	
	<select id="listAllTicket" resultType="TicketVO">
			 select * from ticket
			 order by t_bno desc
	</select>
	
	<select id="listMemberTicket" parameterType="String" resultType="TicketVO">
			 select * 
			 from ticket t, issued_t i, complete_t c 
			 where t.t_bno = i.T_BNO(+) and c.i_no(+) = i.I_NO and id = #{id} 
			 order by i_valid
	</select>
	
	<select id="listManagerTicket" parameterType="String" resultType="TicketVO">
			 select * from ticket
			 where s_no in (select s_no from store where id = #{id})
			 order by s_no
	</select>
	
	<insert id="insertIssue" parameterType="java.util.HashMap">
		insert into ISSUED_T(i_no, t_bno, id, i_valid) 
			values(#{i_no}, #{t_bno}, #{id} , #{t_effectivelife})
	</insert>
	
	<select id="duplicateIssue" parameterType="String" resultType="Integer">
		select count(*) from issued_t where i_no = #{i_no}
	</select>
</mapper>











