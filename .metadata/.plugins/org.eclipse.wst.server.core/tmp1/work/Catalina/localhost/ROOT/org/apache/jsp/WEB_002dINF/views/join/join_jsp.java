/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.36
 * Generated at: 2018-06-10 15:02:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.join;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import koing.kosta180.domain.MemberVO;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("koing.kosta180.domain.MemberVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Koing 회원가입</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/join.css\">\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    \r\n");
      out.write("        // 회원가입 화면의 입력값들을 검사한다.\r\n");
      out.write("        function checkValue()\r\n");
      out.write("        {\r\n");
      out.write("            var form = document.join_form;\r\n");
      out.write("        \r\n");
      out.write("            if(!form.id.value){\r\n");
      out.write("                alert(\"아이디를 입력하세요.\");\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("           if(form.idDuplication.value != \"idCheck\"){\r\n");
      out.write("                alert(\"아이디 중복체크를 해주세요.\");\r\n");
      out.write("                return false;\r\n");
      out.write("            } \r\n");
      out.write("            \r\n");
      out.write("            if(!form.pw.value){\r\n");
      out.write("                alert(\"비밀번호를 입력하세요.\");\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            if(form.pw.value.length<6){\r\n");
      out.write("            \talert(\"비밀번호를 6자리 이상 입력하세요.\");\r\n");
      out.write("            \treturn false;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // 비밀번호와 비밀번호 확인에 입력된 값이 동일한지 확인\r\n");
      out.write("            if(form.pw.value != form.pw2.value ){\r\n");
      out.write("                alert(\"비밀번호를 동일하게 입력하세요.\");\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            if(!form.m_name.value){\r\n");
      out.write("                alert(\"이름을 입력하세요.\");\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            if(!form.m_ssno.value){\r\n");
      out.write("                alert(\"생년월일을 입력하세요.\");\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            if(!form.m_gender.value){\r\n");
      out.write("                alert(\"성별을 선택하세요.\");\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            if(isNaN(form.m_ssno.value)){\r\n");
      out.write("                alert(\"주민번호는 숫자만 입력가능합니다.\");\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            if(isNaN(form.m_pno.value)){\r\n");
      out.write("                alert(\"전화번호는 - 제외한 숫자만 입력해주세요.\");\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            if(!form.m_address.value){\r\n");
      out.write("                alert(\"주소를 입력하세요.\");\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        $(\"input[name = Id]\").keyup(function() {\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl : \"/duplicationCheck\",\r\n");
      out.write("\t\t\t\ttype : \"post\",\r\n");
      out.write("\t\t\t\tdata : $(\"form\").serialize(),\r\n");
      out.write("\t\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\t\tif (data.length > 0) {\r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"duplicateResult\").value = \"이미 해당 아이디로 가입된 회원이 있습니다.\";\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tif ($(\"input[name = Id]\").val().length < 5) {\r\n");
      out.write("\t\t\t\t\t\tdocument.getElementById(\"duplicateResult\").value = \"아이디를 5자 이상 입력해주세요.\";\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tdocument.getElementById(\"duplicateResult\").value = \"사용 가능한 아이디입니다.\";\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror : function(error) {\r\n");
      out.write("\t\t\t\t\talert(error.statusText);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t});\r\n");
      out.write("        \r\n");
      out.write("       // 아이디 중복체크 화면open\r\n");
      out.write("        function openIdChk(){\r\n");
      out.write("            window.name = \"parentForm\";\r\n");
      out.write("            window.open(\"IdCheckForm\",\r\n");
      out.write("                    \"chkForm\", \"width=500, height=300, resizable = no, scrollbars = no\");    \r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // 아이디 입력창에 값 입력시 hidden에 idUncheck를 세팅한다.\r\n");
      out.write("        // 이렇게 하는 이유는 중복체크 후 다시 아이디 창이 새로운 아이디를 입력했을 때\r\n");
      out.write("        // 다시 중복체크를 하도록 한다.\r\n");
      out.write("        function inputIdChk(){\r\n");
      out.write("            document.join_form.idDuplication.value =\"idUncheck\";\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("\t\t//체크박스 all\r\n");
      out.write(" \t\tfunction check(){\r\n");
      out.write("\t   \t\tcbox = join_form.m_agree;\r\n");
      out.write("\t\t    if(cbox.length) {  // 여러 개일 경우\r\n");
      out.write("    \t\t    for(var i = 0; i<cbox.length;i++) {\r\n");
      out.write("\t           \t\tcbox[i].checked=join_form.allCheck.checked;\r\n");
      out.write("\t\t        }\r\n");
      out.write("\t\t    } else { // 한 개일 경우\r\n");
      out.write("\t\t        cbox.checked=input_form.all.checked;\r\n");
      out.write("\t   \t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("   </script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../layout/header.jsp", out, false);
      out.write("\r\n");
      out.write("\t<div id=\"content_wrap\">\r\n");
      out.write("\t\t<div class=\"join\">\r\n");
      out.write("\t\t\t<form name=\"join_form\" id=\"join_form\" method=\"post\"\r\n");
      out.write("\t\t\t\tonsubmit=\"return checkValue()\">\r\n");
      out.write("\t\t\t\t<p class=\"title\">회원가입</p>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<p class=\"subtitle\">정보입력</p>\r\n");
      out.write("\t\t\t\t<div class=\"basic\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" name=\"id\" placeholder=\"아이디\"\r\n");
      out.write("\t\t\t\t\t\t\tonkeydown=inputIdChk()> <input type=\"button\" value=\"중복확인\"\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"small\" onclick=\"openIdChk()\"> <input type=\"hidden\"\r\n");
      out.write("\t\t\t\t\t\t\tname=\"idDuplication\" value=\"idUncheck\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"password divide\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"password\" name=\"pw\" placeholder=\"비밀번호 (6자이상)\"\r\n");
      out.write("\t\t\t\t\t\t\tmaxlength=\"30\"> <input type=\"password\" name=\"pw2\"\r\n");
      out.write("\t\t\t\t\t\t\tplaceholder=\"비밀번호 재확인\" maxlength=\"30\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" name=\"m_name\" placeholder=\"이름\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"gender divide\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" name=\"m_gender\" value=\"M\" id=\"gender_male\"><label\r\n");
      out.write("\t\t\t\t\t\t\tfor=\"gender_male\">남자</label> <input type=\"radio\" name=\"m_gender\"\r\n");
      out.write("\t\t\t\t\t\t\tvalue=\"F\" id=\"gender_female\"><label for=\"gender_female\">여자</label>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"ssno divide\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" name=\"m_ssno\" placeholder=\"생년월일6자리\"\r\n");
      out.write("\t\t\t\t\t\t\tmaxlength=\"6\"> <input type=\"text\" name=\"m_ssno2\"\r\n");
      out.write("\t\t\t\t\t\t\tplaceholder=\"주민등록번호 뒤 맨 앞자리\" maxlength=\"1\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" name=\"m_pno\" placeholder=\"핸드폰번호\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" name=\"m_address\" placeholder=\"주소\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" name=\"m_address2\" placeholder=\"세부주소\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<p class=\"subtitle\">약관동의</p>\r\n");
      out.write("\t\t\t\t\t<div class=\"clause\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<input type=\"checkbox\" id=\"allCheck\" onclick=\"check()\"><label\r\n");
      out.write("\t\t\t\t\t\t\tfor=\"allCheck\">전체 이용약관에 동의합니다.</label>\r\n");
      out.write("\t\t\t\t\t\t<hr>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"checkbox\" name=\"m_agree\" id=\"agree_1\"><label\r\n");
      out.write("\t\t\t\t\t\t\tfor=\"agree_1\">만 14세 이상입니다. <span>(필수)</span></label> <input\r\n");
      out.write("\t\t\t\t\t\t\ttype=\"checkbox\" name=\"m_agree\" id=\"agree_2\"><label\r\n");
      out.write("\t\t\t\t\t\t\tfor=\"agree_2\">이용약관 <span>(필수)</span></label>\r\n");
      out.write("\t\t\t\t\t\t<iframe src=\"../static/tos.html\"></iframe>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<input type=\"checkbox\" name=\"m_agree\" id=\"agree_3\"><label\r\n");
      out.write("\t\t\t\t\t\t\tfor=\"agree_3\">개인정보취급방침 <span>(필수)</span></label>\r\n");
      out.write("\t\t\t\t\t\t<iframe src=\"../static/privacy.html\"></iframe>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<input type=\"checkbox\" name=\"m_agree\" id=\"m_agree\"\r\n");
      out.write("\t\t\t\t\t\t\tdata-target=\"marketing\" value='true'><label for=\"m_agree\">\r\n");
      out.write("\t\t\t\t\t\t\tSocial 매칭 서비스 동의 <span class=\"optional\">(선택)</span>\r\n");
      out.write("\t\t\t\t\t\t</label>\r\n");
      out.write("\t\t\t\t\t\t<p>Social Dining을 위한 정보수집에 동의해주세요.</p>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<input type=\"submit\" class=\"complete\" tabindex=\"-1\" value=\"다음\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../layout/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
